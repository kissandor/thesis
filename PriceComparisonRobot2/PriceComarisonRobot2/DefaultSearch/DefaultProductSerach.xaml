<Activity mc:Ignorable="sap sap2010" x:Class="DefaultProductSerach" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:etpa="clr-namespace:Ekke.Thesis.PriceFinder.Activities;assembly=Ekke.Thesis.PriceFinder.Activities" xmlns:etpm="clr-namespace:Ekke.Thesis.PriceFinder.Models;assembly=Ekke.Thesis.PriceFinder" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:sc1="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SearchBarUiElement" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_ProductToSearch" Type="InArgument(x:String)" />
    <x:Property Name="out_SearchResultOfOneProduct" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1001.5999999999999,4084.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Windows.Media.Animation</x:String>
      <x:String>System.Windows.Media</x:String>
      <x:String>System.Windows.Threading</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Ekke.Thesis.PriceFinder.Models</x:String>
      <x:String>Ekke.Thesis.PriceFinder.Activities</x:String>
      <x:String>Ekke.Thesis.PriceFinder</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Windows.Presentation</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>Ekke.Thesis.PriceFinder</AssemblyReference>
      <AssemblyReference>Ekke.Thesis.PriceFinder.Activities</AssemblyReference>
      <AssemblyReference>PriceParserActivity</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow:&#xA;- types the product name into the search bar and press &quot;Enter&quot;&#xA;- finds all UiElements where the aaname attribute contains the product name&#xA;- for each loop to get the 3rd ancestor of all of these ui element. The price should be  found in the ancestor ui element &#xA;" DisplayName="DefaultProductSerach" sap:VirtualizedContainerService.HintSize="804,4020" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_ComputerPartNameWebCtrl" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ui_ProductsFound" />
      <Variable x:TypeArguments="scg:List(ui:UiElement)" Name="ui_FilteredProducts">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:List(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">new List&lt;UiElement&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="str_AllRes" />
      <Variable x:TypeArguments="x:String" Name="TestString" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="741.6,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Product_x0020_Description_x0020_Url&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Product_x0020_Description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Price&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">out_SearchResultOfOneProduct</CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DelayAfter="5" DisplayName="Type Into" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="741.6,230.4" sap2010:WorkflowViewState.IdRef="NTypeInto_1" Version="V3">
      <uix:NTypeInto.InUiElement>
        <InArgument x:TypeArguments="ui:UiElement">
          <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">in_SearchBarUiElement</CSharpValue>
        </InArgument>
      </uix:NTypeInto.InUiElement>
      <uix:NTypeInto.Text>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">in_ProductToSearch + "[k(Enter)]"</CSharpValue>
        </InArgument>
      </uix:NTypeInto.Text>
    </uix:NTypeInto>
    <Assign sap:VirtualizedContainerService.HintSize="741.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">str_ComputerPartNameWebCtrl</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44" xml:space="preserve">"&lt;webctrl aaname ='*" + in_ProductToSearch.Replace(" ", "*")+"*'  /&gt;"</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:FindChildren DisplayName="Find Children" sap:VirtualizedContainerService.HintSize="741.6,118.4" sap2010:WorkflowViewState.IdRef="FindChildren_2" Scope="FIND_DESCENDANTS">
      <ui:FindChildren.Children>
        <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
          <CSharpReference x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">ui_ProductsFound</CSharpReference>
        </OutArgument>
      </ui:FindChildren.Children>
      <ui:FindChildren.Filter>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">str_ComputerPartNameWebCtrl</CSharpValue>
        </InArgument>
      </ui:FindChildren.Filter>
      <ui:FindChildren.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e5d9c479-6703-408d-8cc2-5a8a63c1478d" Selector="&lt;html app='msedge.exe' /&gt;&lt;webctrl css-selector='body' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:FindChildren.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FindChildren>
    <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="741.6,2812.8" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ui:UiElement">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:UiElement" Name="currentUiElement" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="708,2615.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_InnerTextOfCurrentUiElement" />
              <Variable x:TypeArguments="ui:UiElement" Name="ui_AncestorOfCurrentUiElement" />
              <Variable x:TypeArguments="x:String" Name="str_InnerTextOfAncestor" />
              <Variable x:TypeArguments="x:String" Name="str_HrefOfCurrentUiElement" />
              <Variable x:TypeArguments="etpm:PriceCurrencyPair" Name="pcp_FoundPrice" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="aaname" DisplayName="Get Attribute" sap:VirtualizedContainerService.HintSize="645.6,220" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_6" Version="V3">
              <uix:NGetAttributeGeneric.InUiElement>
                <InArgument x:TypeArguments="ui:UiElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">currentUiElement</CSharpValue>
                </InArgument>
              </uix:NGetAttributeGeneric.InUiElement>
              <uix:NGetAttributeGeneric.Result>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">str_InnerTextOfCurrentUiElement</CSharpReference>
                </OutArgument>
              </uix:NGetAttributeGeneric.Result>
            </uix:NGetAttributeGeneric>
            <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="href" DisplayName="Get Attribute" sap:VirtualizedContainerService.HintSize="645.6,220" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_7" Version="V3">
              <uix:NGetAttributeGeneric.InUiElement>
                <InArgument x:TypeArguments="ui:UiElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">currentUiElement</CSharpValue>
                </InArgument>
              </uix:NGetAttributeGeneric.InUiElement>
              <uix:NGetAttributeGeneric.Result>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">str_HrefOfCurrentUiElement</CSharpReference>
                </OutArgument>
              </uix:NGetAttributeGeneric.Result>
            </uix:NGetAttributeGeneric>
            <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="645.6,1324.8" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">str_InnerTextOfCurrentUiElement.Length &lt; in_ProductToSearch.Length * 5</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="595.2,1096.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetAncestor DisplayName="Get Ancestor" sap:VirtualizedContainerService.HintSize="532.8,118.4" sap2010:WorkflowViewState.IdRef="GetAncestor_2" UpLevels="3">
                          <ui:GetAncestor.Ancestor>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">ui_AncestorOfCurrentUiElement</CSharpReference>
                            </OutArgument>
                          </ui:GetAncestor.Ancestor>
                          <ui:GetAncestor.Target>
                            <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Id="09fed111-5e7f-445b-a437-17b66e3ae1f7">
                              <ui:Target.Element>
                                <InArgument x:TypeArguments="ui:UiElement">
                                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">currentUiElement</CSharpValue>
                                </InArgument>
                              </ui:Target.Element>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetAncestor.Target>
                        </ui:GetAncestor>
                        <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="innerText" DisplayName="Get Attribute" sap:VirtualizedContainerService.HintSize="532.8,220" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_5" Version="V3">
                          <uix:NGetAttributeGeneric.InUiElement>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">ui_AncestorOfCurrentUiElement</CSharpValue>
                            </InArgument>
                          </uix:NGetAttributeGeneric.InUiElement>
                          <uix:NGetAttributeGeneric.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">str_InnerTextOfAncestor</CSharpReference>
                            </OutArgument>
                          </uix:NGetAttributeGeneric.Result>
                        </uix:NGetAttributeGeneric>
                        <Assign sap:VirtualizedContainerService.HintSize="532.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">str_AllRes</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">string.Concat(str_AllRes, str_InnerTextOfAncestor.Replace("\t", "").Replace("\n", "").Replace("\r", "").Replace("\u00A0", ""), "+++++++++++++++")</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="532.8,556" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence sap:VirtualizedContainerService.HintSize="496,301.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <etpa:PriceFinder ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="433.6,108" sap2010:WorkflowViewState.IdRef="PriceFinder_1">
                                <etpa:PriceFinder.InputText>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">str_InnerTextOfAncestor.Replace("\t", "").Replace("\n", "").Replace("\r", "").Replace("\u00A0", "")</CSharpValue>
                                  </InArgument>
                                </etpa:PriceFinder.InputText>
                                <etpa:PriceFinder.PriceAndCurrency>
                                  <OutArgument x:TypeArguments="etpm:PriceCurrencyPair">
                                    <CSharpReference x:TypeArguments="etpm:PriceCurrencyPair" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">pcp_FoundPrice</CSharpReference>
                                  </OutArgument>
                                </etpa:PriceFinder.PriceAndCurrency>
                              </etpa:PriceFinder>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">TestString</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">string.Concat(TestString," Product name: ",str_InnerTextOfCurrentUiElement, " Website: ",str_HrefOfCurrentUiElement, " Price: ",pcp_FoundPrice.Price.ToString(), " ",pcp_FoundPrice.Currency.ToString(), "\n")</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="etpm:PriceCurrencyPair">
                                        <CSharpReference x:TypeArguments="etpm:PriceCurrencyPair" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">pcp_FoundPrice</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="etpm:PriceCurrencyPair">
                                        <CSharpValue x:TypeArguments="etpm:PriceCurrencyPair" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">null</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
            <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="645.6,761.6" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">pcp_FoundPrice != null</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540.8,542.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRow" Name="dr_DataRow" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,242.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="sd:DataRow">
                                    <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">dr_DataRow</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="sd:DataRow">
                                    <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">out_SearchResultOfOneProduct.NewRow()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Object">
                                    <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">dr_DataRow["Product Description Url"]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">str_HrefOfCurrentUiElement</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Object">
                                    <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">dr_DataRow["Product Description"]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">str_InnerTextOfCurrentUiElement</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Object">
                                    <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">dr_DataRow["Price"]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">pcp_FoundPrice.Price.ToString() + " " +pcp_FoundPrice.Currency.ToString()</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="478.4,211.2" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                          <ui:AddDataRow.DataRow>
                            <InArgument x:TypeArguments="sd:DataRow">
                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">dr_DataRow</CSharpValue>
                            </InArgument>
                          </ui:AddDataRow.DataRow>
                          <ui:AddDataRow.DataTable>
                            <InOutArgument x:TypeArguments="sd:DataTable">
                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">out_SearchResultOfOneProduct</CSharpReference>
                            </InOutArgument>
                          </ui:AddDataRow.DataTable>
                        </ui:AddDataRow>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">ui_ProductsFound</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="741.6,148" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="sheet1" WorkbookPath="out.xlsx">
      <ui:WriteRange.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">out_SearchResultOfOneProduct</CSharpValue>
        </InArgument>
      </ui:WriteRange.DataTable>
    </ui:WriteRange>
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="RES.txt" sap:VirtualizedContainerService.HintSize="741.6,166.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1">
      <ui:WriteTextFile.Text>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">str_AllRes</CSharpValue>
        </InArgument>
      </ui:WriteTextFile.Text>
    </ui:WriteTextFile>
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="RESSSS.txt" sap:VirtualizedContainerService.HintSize="741.6,157.6" sap2010:WorkflowViewState.IdRef="WriteTextFile_2">
      <ui:WriteTextFile.Text>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">TestString</CSharpValue>
        </InArgument>
      </ui:WriteTextFile.Text>
    </ui:WriteTextFile>
  </Sequence>
</Activity>