<Activity mc:Ignorable="sap sap2010" x:Class="FindSearchInputUiElement" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:sc1="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_SearchBarUiElement" Type="OutArgument(ui:UiElement)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1001.5999999999999,5608</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow:&#xA;- Saves all input UI elements on the website to a list called ui_AllInputUiElements.&#xA;- Checks if the &quot;placeholder&quot;, &quot;name&quot;, or &quot;Data-TestId&quot; attribute contains the &quot;search&quot; keyword.&#xA;- If yes, the input UI element is identified as the search bar.&#xA;- Saves the search bar to a variable called out_SearchBarUiElement." DisplayName="FindSearchInputUiElement" sap:VirtualizedContainerService.HintSize="704.8,5543.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ui_AllInputUiElements" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ui_AllInputSearchUiElements" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ui_AllInputTextUiElements" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch sap2010:Annotation.AnnotationText="Try to find all input UiElement, log the exception message, and assign a null value to ui_AllInputUiElements if finding all input UiElement fails" DisplayName="Try to find all input UiElement" sap:VirtualizedContainerService.HintSize="642.4,756" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="496,492.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FindChildren sap2010:Annotation.AnnotationText="Activity to find all Input Ui Element on the Webpage" DisplayName="Find All Input UiElement" Filter="&lt;webctrl tag='INPUT' type='search' /&gt;" sap:VirtualizedContainerService.HintSize="433.6,149.6" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_DESCENDANTS">
            <ui:FindChildren.Children>
              <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                <CSharpReference x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">ui_AllInputSearchUiElements</CSharpReference>
              </OutArgument>
            </ui:FindChildren.Children>
            <ui:FindChildren.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="298b45af-812a-409c-b53a-70ad1c790834" Selector="&lt;html app='msedge.exe' /&gt;&lt;webctrl css-selector='body' /&gt;" WaitForReady="INTERACTIVE">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
              </ui:Target>
            </ui:FindChildren.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FindChildren>
          <ui:FindChildren sap2010:Annotation.AnnotationText="Activity to find all Input Ui Element on the Webpage" DisplayName="Find All Input UiElement" Filter="&lt;webctrl tag='INPUT' type='text' /&gt;" sap:VirtualizedContainerService.HintSize="433.6,149.6" sap2010:WorkflowViewState.IdRef="FindChildren_2" Scope="FIND_DESCENDANTS">
            <ui:FindChildren.Children>
              <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                <CSharpReference x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">ui_AllInputTextUiElements</CSharpReference>
              </OutArgument>
            </ui:FindChildren.Children>
            <ui:FindChildren.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="298b45af-812a-409c-b53a-70ad1c790834" Selector="&lt;html app='msedge.exe' /&gt;&lt;webctrl css-selector='body' /&gt;" WaitForReady="INTERACTIVE">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
              </ui:Target>
            </ui:FindChildren.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FindChildren>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                <CSharpReference x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">ui_AllInputUiElements</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                <CSharpValue x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">ui_AllInputSearchUiElements.Concat(ui_AllInputTextUiElements).Distinct().ToList()</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="496,368" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="ui:LogLevel" />
                      </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Warn</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:Object" />
                      </CSharpValue.Result>"Error finding all input ui element" + exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Assign sap2010:Annotation.AnnotationText="Activity to assign a null value to ui_AllInpotUiElements if there was an exception thrown." DisplayName="Assign a null value to ui_AllInputUiElements." sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                    <CSharpReference x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">ui_AllInputUiElements</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)">
                    <CSharpValue x:TypeArguments="scg:IEnumerable(ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)" />
                      </CSharpValue.Result>null</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each element in ui_AllInputUiElements, to find the search input field." DisplayName="Iterate through each UI element in a collection." sap:VirtualizedContainerService.HintSize="642.4,4606.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ui:UiElement">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:UiElement" Name="currentUiElement" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="608.8,4386.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_PlaceholderAttribute" />
              <Variable x:TypeArguments="x:String" Name="str_NameAttribute" />
              <Variable x:TypeArguments="x:String" Name="str_DatatestIdAttribute" />
              <Variable x:TypeArguments="x:String" Name="str_IdAttribute" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="546.4,495.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <uix:NGetAttributeGeneric x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Activity to save the placeholder attribute of the current element." Attribute="placeholder" DisplayName="Get Attribute - Placeholder " sap:VirtualizedContainerService.HintSize="333.6,232" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_1" Version="V3">
                  <uix:NGetAttributeGeneric.InUiElement>
                    <InArgument x:TypeArguments="ui:UiElement">
                      <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">currentUiElement</CSharpValue>
                    </InArgument>
                  </uix:NGetAttributeGeneric.InUiElement>
                  <uix:NGetAttributeGeneric.Result>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">str_PlaceholderAttribute</CSharpReference>
                    </OutArgument>
                  </uix:NGetAttributeGeneric.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NGetAttributeGeneric>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">"Error to get placeholder attribute" + exception.Message</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:IfElseIf sap2010:Annotation.AnnotationText="Check if attribute contains search keywords, if yes, we have found the search input bar,  assign the search bar UI element, and break the loop." DisplayName="Check if attributes contain search keywords" sap:VirtualizedContainerService.HintSize="546.4,524" sap2010:WorkflowViewState.IdRef="IfElseIf_4">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_5">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31" xml:space="preserve">str_PlaceholderAttribute.ToLower().Contains("search") || 
str_PlaceholderAttribute.ToLower().Contains("looking for") || 
str_PlaceholderAttribute.ToLower().Contains("keres")</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,250.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">out_SearchBarUiElement</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">currentUiElement</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_4" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IfElseIf>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="546.4,495.2" sap2010:WorkflowViewState.IdRef="TryCatch_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <uix:NGetAttributeGeneric x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Activity to save the placeholder attribute of the current element." Attribute="id" DisplayName="Get Attribute - Placeholder " sap:VirtualizedContainerService.HintSize="333.6,232" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_4" Version="V3">
                  <uix:NGetAttributeGeneric.InUiElement>
                    <InArgument x:TypeArguments="ui:UiElement">
                      <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">currentUiElement</CSharpValue>
                    </InArgument>
                  </uix:NGetAttributeGeneric.InUiElement>
                  <uix:NGetAttributeGeneric.Result>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">str_IdAttribute</CSharpReference>
                    </OutArgument>
                  </uix:NGetAttributeGeneric.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NGetAttributeGeneric>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">"Error to get placeholder attribute" + exception.Message</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:IfElseIf sap2010:Annotation.AnnotationText="Check if attribute contains search keywords, if yes, we have found the search input bar,  assign the search bar UI element, and break the loop." DisplayName="Check if attributes contain search keywords" sap:VirtualizedContainerService.HintSize="546.4,524" sap2010:WorkflowViewState.IdRef="IfElseIf_5">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_6">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37" xml:space="preserve">str_IdAttribute.ToLower().Contains("search") || 
str_IdAttribute.ToLower().Contains("looking for") || 
str_IdAttribute.ToLower().Contains("keres")</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,250.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">out_SearchBarUiElement</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">currentUiElement</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_5" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IfElseIf>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="546.4,495.2" sap2010:WorkflowViewState.IdRef="TryCatch_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <uix:NGetAttributeGeneric x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Activity to save the Name attribute of the current element." Attribute="name" DisplayName="Get Attribute - Name" sap:VirtualizedContainerService.HintSize="333.6,232" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_2" Version="V3">
                  <uix:NGetAttributeGeneric.InUiElement>
                    <InArgument x:TypeArguments="ui:UiElement">
                      <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">currentUiElement</CSharpValue>
                    </InArgument>
                  </uix:NGetAttributeGeneric.InUiElement>
                  <uix:NGetAttributeGeneric.Result>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">str_NameAttribute</CSharpReference>
                    </OutArgument>
                  </uix:NGetAttributeGeneric.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NGetAttributeGeneric>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">"Error getting name attribute" + exception.Message</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:IfElseIf sap2010:Annotation.AnnotationText="Check if the name attribute contains search keywords, if yes, we have found the search input bar,  assign the search bar UI element, and break the loop." DisplayName="Else If - Name Attributes Contains Search" sap:VirtualizedContainerService.HintSize="546.4,524" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32" xml:space="preserve">str_NameAttribute.ToLower().Contains("search") || 
str_NameAttribute.ToLower().Contains("looking for") || 
str_NameAttribute.ToLower().Contains("keres")</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,250.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">
                                <CSharpReference.Result>
                                  <OutArgument x:TypeArguments="Location(ui:UiElement)" />
                                </CSharpReference.Result>out_SearchBarUiElement</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="ui:UiElement" />
                                </CSharpValue.Result>currentUiElement</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IfElseIf>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="546.4,495.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <uix:NGetAttributeGeneric x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Activity to save the data-testid attribute of the current element." Attribute="data-testid" DisplayName="Get Attribute - Data-TestId" sap:VirtualizedContainerService.HintSize="333.6,232" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_3" Version="V3">
                  <uix:NGetAttributeGeneric.InUiElement>
                    <InArgument x:TypeArguments="ui:UiElement">
                      <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">currentUiElement</CSharpValue>
                    </InArgument>
                  </uix:NGetAttributeGeneric.InUiElement>
                  <uix:NGetAttributeGeneric.Result>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">str_DatatestIdAttribute</CSharpReference>
                    </OutArgument>
                  </uix:NGetAttributeGeneric.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NGetAttributeGeneric>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                      <ui:LogMessage.Level>
                        <InArgument x:TypeArguments="ui:LogLevel">
                          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Level>
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">"Error getting sata-testid " + exception.Message</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:IfElseIf sap2010:Annotation.AnnotationText="Check if the data-testid attribute contains search keywords, if yes, we have found the search input bar,  assign the search bar UI element, and break the loop." DisplayName="Else If - Data-TestId Attributes Contains Search" sap:VirtualizedContainerService.HintSize="546.4,744.8" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
              <ui:IfElseIf.ConditionBlocks>
                <sc1:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                    <ui:IfElseIfBlock.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33" xml:space="preserve">str_DatatestIdAttribute.ToLower().Contains("search") || 
str_DatatestIdAttribute.ToLower().Contains("looking for") || 
str_DatatestIdAttribute.ToLower().Contains("keres")</CSharpValue>
                      </InArgument>
                    </ui:IfElseIfBlock.Condition>
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,250.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">
                                <CSharpReference.Result>
                                  <OutArgument x:TypeArguments="Location(ui:UiElement)" />
                                </CSharpReference.Result>out_SearchBarUiElement</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="ui:UiElement" />
                                </CSharpValue.Result>currentUiElement</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                  <ui:IfElseIfBlock BlockType="Else" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_4">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:UiElement">
                              <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">
                                <CSharpReference.Result>
                                  <OutArgument x:TypeArguments="Location(ui:UiElement)" />
                                </CSharpReference.Result>out_SearchBarUiElement</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:UiElement">
                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="ui:UiElement" />
                                </CSharpValue.Result>null</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc1:BindingList>
              </ui:IfElseIf.ConditionBlocks>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IfElseIf>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="sc:IEnumerable" />
            </CSharpValue.Result>ui_AllInputUiElements</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>